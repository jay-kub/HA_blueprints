blueprint:
  name: Dynamic Notifications
  description: Send notifications based on presense detection and use triggers to clear them.
  domain: script
  author: jay-kub
  input:
    notify_group:
      name: Who would you like to notify?
      default: 
        entity_id: []
      selector:
        target:
          entity:
            domain: person
    only_home:
      name: Notify only if home?
      description: Notifications will only be sent to people who are home.
      default: false
      selector:
        boolean: {}
    only_home_wait:
      name: Notify when home?
      description: People who are initially away will receive a notification when their state changes to home.
      default: false
      selector:
        boolean: {}
    clear_notifications:
      name: Trigger to clear notifications?
      description: The script will watch for the trigger below, and once triggered it will clear all notifications and stop the script.
      default: false
      selector:
        boolean: {}    
    clear_notification_trigger:
      name: "Trigger to Clear Notification"
      description: "Leave empty if you don't want the notification to be cleared"
      default: []
      selector:
        trigger:
    notification_tag:
      name: Notification Tag
      description: This tag will be used by home assistant to track the notifications. Please ensure you haven't used the same tag in other automations.
      default: ''
    

variables:
  group: !input notify_group
  n_tag: !input notification_tag
  homegroup: "{% set home = namespace(group=[]) %}
    {% set away = namespace(group=[]) %}

    {% for index in group.entity_id %}

    {% if is_state(index, 'home') %}

    {% set home.group = home.group + [index] %}
    {% else %}
    {% set away.group = away.group + [index] %}

    {% endif %}
    
    {% endfor %}
    {{ home.group }}"
  awaygroup: " {% set home = namespace(group=[]) %}
    {% set away = namespace(group=[]) %}

    {% for index in group.entity_id %}

    {% if is_state(index, 'home') %}

    {% set home.group = home.group + [index] %}
    {% else %}
    {% set away.group = away.group + [index] %}

    {% endif %}

    {% endfor %}
    {{ away.group }}"

sequence:
  - service: notify.jake
    data:
      message: "Home: {{ homegroup }}. Away: {{ awaygroup }}."
      # data:
      #   tag: trash
      #   notification_icon: mdi:trash-can-outline
    enabled: true     
mode: parallel